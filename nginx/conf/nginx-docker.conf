
#user  nobody;
worker_processes  1;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    # don't cache it
    proxy_no_cache 1;
    # even if cached, don't try to use it
    proxy_cache_bypass 1; 

    sendfile        on;

    keepalive_timeout  65;

    proxy_buffer_size          128k;
	proxy_buffers              4 256k;
	proxy_busy_buffers_size    256k;
	large_client_header_buffers 4 16k;
	
	server_names_hash_bucket_size 64;
	
	ssl_certificate etc/localhost.crt;
	ssl_certificate_key etc/localhost.key;
		

	server {
        listen               443 ssl;
		
        server_name  web.local.dev;
		
		location /sockjs-node {
			proxy_set_header X-Real-IP  $remote_addr;
			proxy_set_header X-Forwarded-For $remote_addr;
			proxy_set_header Host $host;

			proxy_pass https://localhost:3000; 

			proxy_redirect off;

			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";
		}
		
		location /bff {
            proxy_pass http://localhost:8001;
			
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection keep-alive;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_cache_bypass $http_upgrade;
        }
		
		location /api {
            proxy_pass http://localhost:8001;
			
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection keep-alive;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_cache_bypass $http_upgrade;
        }
		
		location /signin-oidc {
            proxy_pass http://localhost:8001;
			
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection keep-alive;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_cache_bypass $http_upgrade;
        }
		
        location / {
			proxy_pass https://localhost:3000;
			
			proxy_set_header Host $host;
        }
	}
	
	server {
        listen               443 ssl;
		
        server_name  ocelot.local.dev;

        location / {
			proxy_pass http://ocelotgateway:8000;
			
			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection keep-alive;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_cache_bypass $http_upgrade;
        }
    }
			

	server {
		#listen 127.0.0.1;
		listen 80;
		server_name keycloak.local.dev;
		location / {
			return 301 https://$host$request_uri;
		}
	}
	
	server {
        listen      443;
		
        server_name  keycloak.local.dev;
		location / {
			proxy_buffering off;
			proxy_set_header Referer $http_referer;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_set_header X-Forwarded-Port $server_port;
			proxy_set_header Host $http_host;

			proxy_pass http://keycloak:8080;
			proxy_redirect off;
		}
	}
}
